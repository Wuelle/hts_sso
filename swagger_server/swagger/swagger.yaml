openapi: 3.0.0
info:
  title: HackThisSite Single Sign-On API
  description: "This API should allow users to login, register and manage their HTS\
    \ accounts. It also provides them with a login cookie that is used to authenticate\
    \ them on various HTS apps"
  version: 0.0.1
servers:
- url: /_api/
paths:
  /login:
    get:
      tags:
      - Authentication
      summary: Start logging in
      description: "Returns a html page guiding the user through the login process.\
        \ The first frame shown will prompt the user to enter their username, the\
        \ order (and number) of subsequent frames is determined by the server. Also\
        \ returns a session cookie that is used to keep track of login progress on\
        \ the server"
      operationId: login_start_session
      parameters:
      - name: redirect
        in: query
        description: "The AES-encrypted redirection url. If this is not a valid url\
          \ belonging to hackthissite.org, the server must respond with a 403 Not\
          \ Allowed."
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: forums.hackthissite.org
      responses:
        "200":
          description: "OK, the user may start the login process"
          headers:
            Set-Cookie:
              description: An login session token that should be sent along with future
                requests.
              style: simple
              explode: false
              schema:
                type: string
                example: LoginSession=<token>;
        "403":
          description: The redirect-to parameter was not a valid hackthissite url.
            Authentication for this url is not allowed.
      x-openapi-router-controller: swagger_server.controllers.authentication_controller
    post:
      tags:
      - Authentication
      summary: Submit one of multiple credential frames
      description: "This API allows the user to login to their hackthissite.org account.\
        \ Authentication is done in three steps: Username, Password and MFA (if enabled).\
        \ The order in which the user must enter these is unspecified (the client\
        \ is told after submitting the previous value). After each step, the user\
        \ may be required to complete a CAPTCHA."
      operationId: login_submit_frame
      parameters:
      - name: LoginSession
        in: cookie
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "200":
          description: The server is ready to receive the next frame. Authentication
            is not yet complete.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextFrame'
        "201":
          description: The user was successfully authenticated and will be redirected
            to their destination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulAuthentication'
        "401":
          description: Invalid session or captcha token
        "403":
          description: The client sent either a nonexisting username or an invalid
            password/mfa code. The client may retry.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptchaPrompt'
        "409":
          description: "The frame type expected by the server did not match the one\
            \ sent by the client. As this likely means that something has gone wrong\
            \ on the clients side, the user should be asked to reload the page and\
            \ restart authentication from the beginning. The server will not accept\
            \ further requests for the current login sequence."
      x-openapi-router-controller: swagger_server.controllers.authentication_controller
  /reauth:
    get:
      tags:
      - Authentication
      summary: "Reauthenticate a user in case their session expired, without needing\
        \ to enter the username again"
      description: "Returns a html page guiding the user through the login process.\
        \ The login is for a specific account, meaning the user does not have the\
        \ option to enter a username and is instead directly shown the password screen"
      operationId: login_start_reauth
      parameters:
      - name: redirect
        in: query
        description: "The AES-encrypted redirection url. If this is not a valid url\
          \ belonging to hackthissite.org, the server must respond with a 403 Not\
          \ Allowed."
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: forums.hackthissite.org
      - name: username
        in: query
        description: The account name that should be reauthenticated
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: Alaska
      responses:
        "200":
          description: "OK, the user may start the login process"
          headers:
            Set-Cookie:
              description: An login session token that should be sent along with future
                requests.
              style: simple
              explode: false
              schema:
                type: string
                example: LoginSession=<token>;
        "403":
          description: The redirect-to parameter was not a valid hackthissite url
            or the given username does not exist.
      x-openapi-router-controller: swagger_server.controllers.authentication_controller
components:
  schemas:
    NextFrame:
      required:
      - next
      - show-captcha
      type: object
      properties:
        next:
          type: string
          description: The next frame that should be shown to the user
          enum:
          - username
          - password
          - mfa
        show-captcha:
          type: boolean
          description: Whether or not the user must complete a captcha to continue
            authentication
      description: Information about the next login frame shown to the user
      example:
        next: password
        show-captcha: false
    CaptchaPrompt:
      required:
      - show-captcha
      type: object
      properties:
        show-captcha:
          type: boolean
          description: Whether or not the user must complete a captcha to continue
            authentication
      description: Tells the client whether or not the server expects it to complete
        a captcha with the next frame
    SuccessfulAuthentication:
      required:
      - redirect
      - token
      type: object
      properties:
        redirect:
          type: string
          description: The client should visit this domain next
          example: forums.hackthissite.org
        token:
          type: string
          description: A cookie that will prove account ownership to HTS apps
          example: HackThisSite=<token>;path=/;domain=hackthissite.org
      description: Provides the client with an authentication cookie and a redirection
        url after completing login
    login_body:
      required:
      - frame
      - value
      type: object
      properties:
        frame:
          type: string
          description: The frame that was submitted by the user
          example: password
          enum:
          - username
          - password
          - mfa
        value:
          type: string
          description: The value submitted by the user
          example: my-very-secure-password123
        h-captcha-response:
          type: string
          description: A token proving the user has completed the hcaptcha challenge.
            Only required if the user was prompted to complete a captcha before
          example: <challenge token>

