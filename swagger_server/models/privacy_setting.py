# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PrivacySetting(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, hidden_from_discord: bool=None, hidden_from_profile: bool=None):  # noqa: E501
        """PrivacySetting - a model defined in Swagger

        :param hidden_from_discord: The hidden_from_discord of this PrivacySetting.  # noqa: E501
        :type hidden_from_discord: bool
        :param hidden_from_profile: The hidden_from_profile of this PrivacySetting.  # noqa: E501
        :type hidden_from_profile: bool
        """
        self.swagger_types = {
            'hidden_from_discord': bool,
            'hidden_from_profile': bool
        }

        self.attribute_map = {
            'hidden_from_discord': 'hidden-from-discord',
            'hidden_from_profile': 'hidden-from-profile'
        }
        self._hidden_from_discord = hidden_from_discord
        self._hidden_from_profile = hidden_from_profile

    @classmethod
    def from_dict(cls, dikt) -> 'PrivacySetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PrivacySetting of this PrivacySetting.  # noqa: E501
        :rtype: PrivacySetting
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hidden_from_discord(self) -> bool:
        """Gets the hidden_from_discord of this PrivacySetting.


        :return: The hidden_from_discord of this PrivacySetting.
        :rtype: bool
        """
        return self._hidden_from_discord

    @hidden_from_discord.setter
    def hidden_from_discord(self, hidden_from_discord: bool):
        """Sets the hidden_from_discord of this PrivacySetting.


        :param hidden_from_discord: The hidden_from_discord of this PrivacySetting.
        :type hidden_from_discord: bool
        """
        if hidden_from_discord is None:
            raise ValueError("Invalid value for `hidden_from_discord`, must not be `None`")  # noqa: E501

        self._hidden_from_discord = hidden_from_discord

    @property
    def hidden_from_profile(self) -> bool:
        """Gets the hidden_from_profile of this PrivacySetting.


        :return: The hidden_from_profile of this PrivacySetting.
        :rtype: bool
        """
        return self._hidden_from_profile

    @hidden_from_profile.setter
    def hidden_from_profile(self, hidden_from_profile: bool):
        """Sets the hidden_from_profile of this PrivacySetting.


        :param hidden_from_profile: The hidden_from_profile of this PrivacySetting.
        :type hidden_from_profile: bool
        """
        if hidden_from_profile is None:
            raise ValueError("Invalid value for `hidden_from_profile`, must not be `None`")  # noqa: E501

        self._hidden_from_profile = hidden_from_profile
