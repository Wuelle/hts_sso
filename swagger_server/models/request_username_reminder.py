# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.account_recoveryrequest_username_reminder_content import AccountRecoveryrequestUsernameReminderContent  # noqa: F401,E501
from swagger_server.models.nonce_token import NonceToken  # noqa: F401,E501
from swagger_server import util


class RequestUsernameReminder(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, nonce: NonceToken=None, content: AccountRecoveryrequestUsernameReminderContent=None):  # noqa: E501
        """RequestUsernameReminder - a model defined in Swagger

        :param nonce: The nonce of this RequestUsernameReminder.  # noqa: E501
        :type nonce: NonceToken
        :param content: The content of this RequestUsernameReminder.  # noqa: E501
        :type content: AccountRecoveryrequestUsernameReminderContent
        """
        self.swagger_types = {
            'nonce': NonceToken,
            'content': AccountRecoveryrequestUsernameReminderContent
        }

        self.attribute_map = {
            'nonce': 'nonce',
            'content': 'content'
        }
        self._nonce = nonce
        self._content = content

    @classmethod
    def from_dict(cls, dikt) -> 'RequestUsernameReminder':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestUsernameReminder of this RequestUsernameReminder.  # noqa: E501
        :rtype: RequestUsernameReminder
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nonce(self) -> NonceToken:
        """Gets the nonce of this RequestUsernameReminder.


        :return: The nonce of this RequestUsernameReminder.
        :rtype: NonceToken
        """
        return self._nonce

    @nonce.setter
    def nonce(self, nonce: NonceToken):
        """Sets the nonce of this RequestUsernameReminder.


        :param nonce: The nonce of this RequestUsernameReminder.
        :type nonce: NonceToken
        """
        if nonce is None:
            raise ValueError("Invalid value for `nonce`, must not be `None`")  # noqa: E501

        self._nonce = nonce

    @property
    def content(self) -> AccountRecoveryrequestUsernameReminderContent:
        """Gets the content of this RequestUsernameReminder.


        :return: The content of this RequestUsernameReminder.
        :rtype: AccountRecoveryrequestUsernameReminderContent
        """
        return self._content

    @content.setter
    def content(self, content: AccountRecoveryrequestUsernameReminderContent):
        """Sets the content of this RequestUsernameReminder.


        :param content: The content of this RequestUsernameReminder.
        :type content: AccountRecoveryrequestUsernameReminderContent
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content
