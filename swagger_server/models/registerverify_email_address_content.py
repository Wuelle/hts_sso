# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RegisterverifyEmailAddressContent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, verification_code: str=None):  # noqa: E501
        """RegisterverifyEmailAddressContent - a model defined in Swagger

        :param verification_code: The verification_code of this RegisterverifyEmailAddressContent.  # noqa: E501
        :type verification_code: str
        """
        self.swagger_types = {
            'verification_code': str
        }

        self.attribute_map = {
            'verification_code': 'verification-code'
        }
        self._verification_code = verification_code

    @classmethod
    def from_dict(cls, dikt) -> 'RegisterverifyEmailAddressContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The registerverify_email_address_content of this RegisterverifyEmailAddressContent.  # noqa: E501
        :rtype: RegisterverifyEmailAddressContent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def verification_code(self) -> str:
        """Gets the verification_code of this RegisterverifyEmailAddressContent.

        A secret code used to prove ownership of an email address  # noqa: E501

        :return: The verification_code of this RegisterverifyEmailAddressContent.
        :rtype: str
        """
        return self._verification_code

    @verification_code.setter
    def verification_code(self, verification_code: str):
        """Sets the verification_code of this RegisterverifyEmailAddressContent.

        A secret code used to prove ownership of an email address  # noqa: E501

        :param verification_code: The verification_code of this RegisterverifyEmailAddressContent.
        :type verification_code: str
        """
        if verification_code is None:
            raise ValueError("Invalid value for `verification_code`, must not be `None`")  # noqa: E501

        self._verification_code = verification_code
