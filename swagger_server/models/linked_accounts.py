# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.linked_account import LinkedAccount  # noqa: F401,E501
from swagger_server import util


class LinkedAccounts(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, discord: LinkedAccount=None, github: LinkedAccount=None, gitlab: LinkedAccount=None):  # noqa: E501
        """LinkedAccounts - a model defined in Swagger

        :param discord: The discord of this LinkedAccounts.  # noqa: E501
        :type discord: LinkedAccount
        :param github: The github of this LinkedAccounts.  # noqa: E501
        :type github: LinkedAccount
        :param gitlab: The gitlab of this LinkedAccounts.  # noqa: E501
        :type gitlab: LinkedAccount
        """
        self.swagger_types = {
            'discord': LinkedAccount,
            'github': LinkedAccount,
            'gitlab': LinkedAccount
        }

        self.attribute_map = {
            'discord': 'discord',
            'github': 'github',
            'gitlab': 'gitlab'
        }
        self._discord = discord
        self._github = github
        self._gitlab = gitlab

    @classmethod
    def from_dict(cls, dikt) -> 'LinkedAccounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LinkedAccounts of this LinkedAccounts.  # noqa: E501
        :rtype: LinkedAccounts
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discord(self) -> LinkedAccount:
        """Gets the discord of this LinkedAccounts.


        :return: The discord of this LinkedAccounts.
        :rtype: LinkedAccount
        """
        return self._discord

    @discord.setter
    def discord(self, discord: LinkedAccount):
        """Sets the discord of this LinkedAccounts.


        :param discord: The discord of this LinkedAccounts.
        :type discord: LinkedAccount
        """

        self._discord = discord

    @property
    def github(self) -> LinkedAccount:
        """Gets the github of this LinkedAccounts.


        :return: The github of this LinkedAccounts.
        :rtype: LinkedAccount
        """
        return self._github

    @github.setter
    def github(self, github: LinkedAccount):
        """Sets the github of this LinkedAccounts.


        :param github: The github of this LinkedAccounts.
        :type github: LinkedAccount
        """

        self._github = github

    @property
    def gitlab(self) -> LinkedAccount:
        """Gets the gitlab of this LinkedAccounts.


        :return: The gitlab of this LinkedAccounts.
        :rtype: LinkedAccount
        """
        return self._gitlab

    @gitlab.setter
    def gitlab(self, gitlab: LinkedAccount):
        """Sets the gitlab of this LinkedAccounts.


        :param gitlab: The gitlab of this LinkedAccounts.
        :type gitlab: LinkedAccount
        """

        self._gitlab = gitlab
