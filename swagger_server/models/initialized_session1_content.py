# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.login_frame import LoginFrame  # noqa: F401,E501
from swagger_server import util


class InitializedSession1Content(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, next: LoginFrame=None):  # noqa: E501
        """InitializedSession1Content - a model defined in Swagger

        :param next: The next of this InitializedSession1Content.  # noqa: E501
        :type next: LoginFrame
        """
        self.swagger_types = {
            'next': LoginFrame
        }

        self.attribute_map = {
            'next': 'next'
        }
        self._next = next

    @classmethod
    def from_dict(cls, dikt) -> 'InitializedSession1Content':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InitializedSession_1_content of this InitializedSession1Content.  # noqa: E501
        :rtype: InitializedSession1Content
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next(self) -> LoginFrame:
        """Gets the next of this InitializedSession1Content.


        :return: The next of this InitializedSession1Content.
        :rtype: LoginFrame
        """
        return self._next

    @next.setter
    def next(self, next: LoginFrame):
        """Sets the next of this InitializedSession1Content.


        :param next: The next of this InitializedSession1Content.
        :type next: LoginFrame
        """
        if next is None:
            raise ValueError("Invalid value for `next`, must not be `None`")  # noqa: E501

        self._next = next
