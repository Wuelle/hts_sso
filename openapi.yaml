openapi: 3.0.0

info:
  title: HackThisSite Single Sign-On API
  description: "This API should allow users to login, register and manage their HTS accounts. It also provides them with a login cookie that is used to authenticate them on various HTS apps"
  version: 0.0.1
paths:
  /login:
    get:
      tags:
        - Auth
      summary:
        Get the html login page
      description: "Returns a html page guiding the user through the login process. The first frame shown will prompt the user to enter their username, the order (and number) of subsequent frames is determined by the server"
      responses:
        "200":
          description: "Everything went fine, the user may start the login process"
    post:
      tags:
        - Auth
      summary: Submit a Frame
      description: "This API allows the user to login to their hackthissite.org account. Authentication is done in three steps: Username, Password and MFA (if enabled). After each step, the user may be required to complete a CAPTCHA."
      parameters: 
        - name: frame
          description: "The frame that was submitted by the user"
          required: true
          in: query
          schema:
            type: string
            enum:
              - username
              - password
              - mfa
          example: password
        - name: value
          description: "The value submitted by the user"
          required: true
          in: query
          schema:
            type: string
          example: "my-very-secure-password123"
        - name: auth_id
          description: "An id used by the server to keep track of the login state. May be omitted if this is the first request, as the client has not yet obtained an id"
          required: false
          in: query
          schema:
            type: string
          example: "4ebd0208-8328-5d69-8c44-ec50939c0967"
      responses:
        "200":
          description: "The server encountered no errors and is either ready to receive the next info or returned an authentication cookie (authentication complete)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_done: 
                    description: "Indicates whether the server requires more information (false) or authentication is complete (true). If this value is true, then the response contains a login cookie. If the value is false, then the response contains information on how to continue the login process"
                    type: boolean
                  next:
                    description:
                      "The next frame that should be shown to the user"
                    type: string
                    enum:
                      - username
                      - password
                      - mfa
                      - done
                  show_captcha:
                    description: "Whether or not the user must complete a captcha to continue authentication"
                    type: boolean
                  auth_id:
                    description: "An id that should be sent along with the next request, for the server to keep track of login state"
                    type: string
                example:
                  is_done: false
                  next: password
                  show_captcha: false
                  auth_id: "4ebd0208-8328-5d69-8c44-ec50939c0967"
        "403":
          description: "The credentials submitted by the user are invalid. The client should re-send the previous request with the correct value"
          content:
            application/json:
              schema:
                type: object
                properties:
                  show_captcha:
                    description: "Whether or not the user must complete a captcha to continue authentication"
                    type: boolean
        "409":
          description: "The frame type expected by the server did not match the one sent by the client. As this likely means that something has gone wrong on the clients side, the user should be asked to reload the page and restart authentication from the beginning. The server will not accept further requests for the current login sequence."
        "500": 
          description: "The server has encountered a situation it does not know how to handle. The client should restart authentication from the beginning"
  /reauth:
    get:
      tags:
        - Re-Auth
      summary:
        Get the html reauthentication page
      description: "Returns a html page guiding the user through the login process. The login is for a specific account, i.e the user does not have the option to enter a username and is instead directly shown the password screen"
      responses:
        "200":
          description: "Everything went fine, the user may start the login process"